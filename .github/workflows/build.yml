name: Build and Release

on:
  push:
    branches: [ main ]
    tags:
      - 'v*'
  pull_request:
    branches: [ main ]

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [darwin, windows]
        goarch: [amd64, arm64]
        exclude:
          - goos: windows
            goarch: arm64

    steps:
    - name: Check out code
      uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'
        cache: true

    - name: Build
      run: |
        # Set filename with extension based on OS
        if [ "${{ matrix.goos }}" = "windows" ]; then
          FILENAME="asarscan-${{ matrix.goos }}-${{ matrix.goarch }}.exe"
        else
          FILENAME="asarscan-${{ matrix.goos }}-${{ matrix.goarch }}"
        fi
        
        # Build the binary
        env GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} go build -v -o $FILENAME cmd/asarscan/*.go
      
    - name: Upload build artifact
      uses: actions/upload-artifact@v3
      with:
        name: asarscan-${{ matrix.goos }}-${{ matrix.goarch }}
        path: asarscan-${{ matrix.goos }}-${{ matrix.goarch }}*
        if-no-files-found: error

  release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: build
    if: startsWith(github.ref, 'refs/tags/v')
    
    steps:
    - name: Check out code
      uses: actions/checkout@v3
      
    - name: Download all artifacts
      uses: actions/download-artifact@v3
      
    - name: List artifacts
      run: find . -type f

    - name: Create Release
      id: create_release
      uses: softprops/action-gh-release@v1
      with:
        name: Release ${{ github.ref_name }}
        draft: false
        prerelease: false
        files: |
          asarscan-darwin-amd64/asarscan-darwin-amd64
          asarscan-darwin-arm64/asarscan-darwin-arm64
          asarscan-windows-amd64/asarscan-windows-amd64.exe
        fail_on_unmatched_files: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 